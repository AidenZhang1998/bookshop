<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="zut.cs.network.bookshop.dao.GoodsDao">

    <resultMap id="baseMap" type="zut.cs.network.bookshop.entity.Goods">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="VARCHAR"/>
        <result property="image" column="image" jdbcType="VARCHAR"/>
        <result property="classification" column="classification" jdbcType="VARCHAR"/>
        <result property="count" column="count" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 查询所有 -->
    <select id="findAll" resultType="zut.cs.network.bookshop.entity.Goods">
        SELECT * FROM products
    </select>

    <!-- 条件查询 -->
    <select id="findByPage" parameterType="zut.cs.network.bookshop.entity.Goods" resultMap="baseMap">
        SELECT * FROM products WHERE 1=1
        <if test="classification != null and !&quot;&quot;.equals(classification.trim())">
            AND classification LIKE CONCAT('%', #{classification}, '%')
        </if>
        <if test="name != null and !&quot;&quot;.equals(name.trim())">
            AND name LIKE CONCAT('%', #{name}, '%')
        </if>
    </select>

    <!-- 根据id查询 -->
    <select id="findById" parameterType="Long" resultMap="baseMap">
        SELECT * FROM products WHERE id = #{id}
    </select>

    <!-- 添加数据 -->
    <insert id="create" parameterType="zut.cs.network.bookshop.entity.Goods">
        INSERT INTO products(name, price, image, classification,count)
        VALUES(#{name}, #{price}, #{image}, #{classification},#{count})
    </insert>

    <!-- 更新数据 -->
    <update id="update" parameterType="zut.cs.network.bookshop.entity.Goods">
        UPDATE products
        <set>
            <if test="name != null !&quot;&quot;.equals(name.trim())">
                name = #{name},
            </if>
            <if test="price != null !&quot;&quot;.equals(price.trim())">
                price = #{price},
            </if>
            <if test="image != null !&quot;&quot;.equals(image.trim())">
                image = #{image},
            </if>
            <if test="classification != null !&quot;&quot;.equals(classification.trim())">
                classification = #{classification},
            </if>
            <if test="count != null !&quot;&quot;.equals(count.trim())">
                count = #{count},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 删除 -->
    <delete id="delete" parameterType="Long">
        DELETE FROM products WHERE id = #{id}
    </delete>

</mapper>